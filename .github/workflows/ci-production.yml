name: Continous Integration

on:
  push:
    branches:
      - main
      - master
  release:
    types:
      - created

jobs:
  pytest:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10", "3.11", "pypy3.8", "pypy3.9" ]
        poetry-version: [ "latest" ]
        os: [ ubuntu-20.04, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    name: Python ${{ matrix.python-version }} / Poetry ${{ matrix.poetry-version }} / ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Update pip
        run: |
          python -m pip install --upgrade pip
      - name: Run Poetry action
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: View poetry --version
        run: poetry --version
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run pytest
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true
  build-and-publish:
    name: Build and publish Python distributions ðŸ“¦ to PyPI and TestPyPI
    runs-on: ubuntu-20.04
    needs:
      - pytest
    steps:
      - uses: actions/checkout@v2
      - name: Set up base Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: latest
      - name: Publish distribution ðŸ“¦ with test.pypi.org
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi ${{ secrets.TEST_PYPI_API_TOKEN }}
          poetry build
          poetry publish -r testpypi
      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.ref, 'refs/tags')
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
          poetry build
          poetry publish
