name: tests

on:
  pull_request:
    branches: '**'
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: 1.1.4
      - name: Install lint dependencies
        run: |
          poetry install --extras lint
      - name: Install and run pre-commit
        uses: pre-commit/action@v2.0.0
        with:
          extra_args: --all-files
  test:
    needs:
      - lint
    strategy:
      fail-fast: false
      matrix:
        poetry-version: [ 1.1.4 ]
        os: [ macos-latest, windows-2019, ubuntu-20.04, ubuntu-18.04 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 2.7
      uses: actions/setup-python@v2
      with:
        python-version: 2.7
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Set up base Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Python Poetry Action
      uses: abatilo/actions-poetry@v2.1.0
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Run Tox
      run: tox
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: true
